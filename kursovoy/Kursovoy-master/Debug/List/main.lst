###############################################################################
#
# IAR ANSI C/C++ Compiler V8.40.2.214/W32 for ARM         25/Mar/2020  21:33:13
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  D:\Kolody\kursovoy\Kursovoy-master\main.cpp
#    Command line =
#        -f C:\Users\User\AppData\Local\Temp\EW85F3.tmp
#        (D:\Kolody\kursovoy\Kursovoy-master\main.cpp -lC
#        D:\Kolody\kursovoy\Kursovoy-master\Debug\List -lA
#        D:\Kolody\kursovoy\Kursovoy-master\Debug\List -o
#        D:\Kolody\kursovoy\Kursovoy-master\Debug\Obj --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp
#        --dlib_config D:\Kolody\iarn\arm\inc\c\DLib_Config_Normal.h -I
#        D:\Kolody\kursovoy\Kursovoy-master\Rtos\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\Rtos\wrapper\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\Rtos\wrapper\FreeRtos\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\Rtos\FreeRtos\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\Rtos\FreeRtos\include\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\Rtos\FreeRtos\portable\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\Rtos\FreeRtos\portable\Common\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\Rtos\FreeRtos\portable\IAR\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\Rtos\FreeRtos\portable\IAR\ARM_CM4F\
#        -I D:\Kolody\kursovoy\Kursovoy-master\Rtos\FreeRtos\portable\MemMang\
#        -I D:\Kolody\kursovoy\Kursovoy-master\MyTasks\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\Common\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\CMSIS\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\Application\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\Application\Diagnostic\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\AHardware\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\AHardware\GpioPort\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\AHardware\IrqController\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\..\CortexLib\AbstractHardware\Pin\
#        -I
#        D:\Kolody\kursovoy\Kursovoy-master\..\CortexLib\AbstractHardware\Registers\STM32F411\FieldValues\
#        -I
#        D:\Kolody\kursovoy\Kursovoy-master\..\CortexLib\AbstractHardware\Registers\STM32F411\
#        -I
#        D:\Kolody\kursovoy\Kursovoy-master\..\CortexLib\AbstractHardware\Registers\
#        -I
#        D:\Kolody\kursovoy\Kursovoy-master\..\CortexLib\AbstractHardware\Port\
#        -I
#        D:\Kolody\kursovoy\Kursovoy-master\..\CortexLib\AbstractHardware\Atomic\
#        -I D:\Kolody\kursovoy\Kursovoy-master\..\CortexLib\Common\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\..\CortexLib\Common\Singleton\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\..\CortexLib-master\Common\ -I
#        D:\Kolody\kursovoy\Kursovoy-master\..\CortexLib-master\AbstractHardware\Registers\STM32F0x1\
#        -I
#        D:\Kolody\kursovoy\Kursovoy-master\..\CortexLib-master\AbstractHardware\Registers\STM32F0x1\FieldValues\
#        -I
#        D:\Kolody\kursovoy\Kursovoy-master\..\CortexLib-master\AbstractHardware\Registers\
#        -I
#        D:\Kolody\kursovoy\Kursovoy-master\..\CortexLib-master\AbstractHardware\Atomic\
#        -I
#        D:\Kolody\kursovoy\Kursovoy-master\..\CortexLib-master\AbstractHardware\Adc\
#        -Ol --c++ --no_exceptions --no_rtti)
#    Locale       =  C
#    List file    =  D:\Kolody\kursovoy\Kursovoy-master\Debug\List\main.lst
#    Object file  =  D:\Kolody\kursovoy\Kursovoy-master\Debug\Obj\main.o
#
###############################################################################

D:\Kolody\kursovoy\Kursovoy-master\main.cpp
      1          #include "rtos.hpp"         // for Rtos
      2          #include "event.hpp"        // for Event
      3          #include "rccregisters.hpp" // for RCC
      4          #include "GpioPort.hpp" //for SetupPort's

      value|= (GPIOModule::MODER::FieldValues::Alternate::Value << (pinNum * 2U)) ; //setup new znachenie
                                               ^
"D:\Kolody\kursovoy\Kursovoy-master\AHardware\GpioPort.hpp",12  Error[Pe276]: 
          name followed by "::" must be a class or namespace name
          detected during instantiation of "inline __interwork __vfp void
                    GpioPort<GPIOModule, pinNum>::SetAlternate() [with
                    GPIOModule=GPIOA, pinNum=5U]" at line 39 of
                    "D:\Kolody\kursovoy\Kursovoy-master\main.cpp"
      5          
      6          std::uint32_t SystemCoreClock = 16'000'000U;
      7          
      8          extern "C" {
      9          int __low_level_init(void)
     10          {
     11            
     12            //Switch on external 16 MHz oscillator
     13            RCC::CR::HSION::On::Set();
     14            while (RCC::CR::HSIRDY::NotReady::IsSet())
     15            {
     16          
     17            }
     18            //Switch system clock on external oscillator
     19            RCC::CFGR::SW::Hsi::Set();
     20            while (!RCC::CFGR::SWS::Hsi::IsSet())
     21            {
     22            }
     23            
     24            RCC::APB2ENR::SYSCFGEN::Enable::Set(); 
     25            
     26          
     27            return 1;
     28          }
     29          }
     30          
     31          //OsWrapper::Event event{500ms, 1}; //FIXME Чисто для примера
     32          
     33          //MyTask myTask(event, UserButton::GetInstance()); //FIXME Чисто для примера
     34          
     35          
     36          int main()
     37          {
     38            GpioPort<GPIOA,5> GPort;
     39            GPort.SetAlternate();
     40            using namespace OsWrapper;
     41            //Rtos::CreateThread(myTask, "myTask", ThreadPriority::lowest);   //FIXME Чисто для примера
     42            //Rtos::Start();
     43          
     44            return 0;
     45          }

Errors: 1
Warnings: none
